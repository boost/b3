@mixin hook-table-header-cell(){ text-transform: uppercase; }

@mixin hook-table-striped(){
    border-top: $table-striped-border-width solid $table-striped-border;
    border-bottom: $table-striped-border-width solid $table-striped-border;
}

@mixin hook-table-misc(){

    .uk-table tbody tr { transition: background-color 0.1s linear; }

}

@mixin hook-inverse-table-striped(){
    border-top-color: $inverse-global-border;
    border-bottom-color: $inverse-global-border;
}

@mixin hook-inverse-component-table(){

    .uk-table th {
        color: $inverse-table-header-cell-color;
        @if(mixin-exists(hook-inverse-table-header-cell)) {@include hook-inverse-table-header-cell();}
    }

    .uk-table caption {
        color: $inverse-table-caption-color;
        @if(mixin-exists(hook-inverse-table-caption)) {@include hook-inverse-table-caption();}
    }

    .uk-table > tr.uk-active,
    .uk-table tbody tr.uk-active {
        background: $inverse-table-row-active-background;
        @if(mixin-exists(hook-inverse-table-row-active)) {@include hook-inverse-table-row-active();}
    }

    .uk-table-divider > tr:not(:first-child),
    .uk-table-divider > :not(:first-child) > tr,
    .uk-table-divider > :first-child > tr:not(:first-child) {
        border-top-color: $inverse-table-divider-border;
        @if(mixin-exists(hook-inverse-table-divider)) {@include hook-inverse-table-divider();}
    }

    .uk-table-striped > tr:nth-of-type(odd),
    .uk-table-striped tbody tr:nth-of-type(odd) {
        background: $inverse-table-striped-row-background;
        @if(mixin-exists(hook-inverse-table-striped)) {@include hook-inverse-table-striped();}
    }

    .uk-table-hover > tr:hover,
    .uk-table-hover tbody tr:hover {
        background: $inverse-table-hover-row-background;
        @if(mixin-exists(hook-inverse-table-hover)) {@include hook-inverse-table-hover();}
    }

}
